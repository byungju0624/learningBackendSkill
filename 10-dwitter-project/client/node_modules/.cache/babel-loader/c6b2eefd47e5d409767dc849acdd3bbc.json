{"ast":null,"code":"var _jsxFileName = \"/Users/jeongbyeongju/Desktop/learning_back_end_skill/10-dwitter-project/client/src/components/NewTweetForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTweetForm = ({\n  tweetService,\n  onError,\n  onCreated\n}) => {\n  _s();\n\n  const [tweet, setTweet] = useState(\"\");\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    tweetService.postTweet(tweet).then(created => {\n      setTweet(\"\");\n      onCreated(created);\n    }).catch(onError);\n  };\n\n  const onChange = event => {\n    setTweet(event.target.value);\n  };\n\n  useEffect(() => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      text: \"New Message:)\",\n      username: \"bob\",\n      name: \"bob\"\n    });\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n    fetch(\"http://localhost:8080/tweets\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log(\"error\", error));\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"tweet-form\",\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Edit your tweet\",\n      value: tweet,\n      required: true,\n      autoFocus: true,\n      onChange: onChange,\n      className: \"form-input tweet-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"form-btn\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTweetForm, \"/Akm0KBymXLmjRAwGHhRydodqac=\");\n\n_c = NewTweetForm;\nexport default NewTweetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTweetForm\");","map":{"version":3,"sources":["/Users/jeongbyeongju/Desktop/learning_back_end_skill/10-dwitter-project/client/src/components/NewTweetForm.jsx"],"names":["React","useState","useEffect","NewTweetForm","tweetService","onError","onCreated","tweet","setTweet","onSubmit","event","preventDefault","postTweet","then","created","catch","onChange","target","value","myHeaders","Headers","append","raw","JSON","stringify","text","username","name","requestOptions","method","headers","body","redirect","fetch","response","result","console","log","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA;AAAzB,CAAD,KAA0C;AAAA;;AAC7D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMQ,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,YAAY,CACTQ,SADH,CACaL,KADb,EAEGM,IAFH,CAESC,OAAD,IAAa;AACjBN,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,MAAAA,SAAS,CAACQ,OAAD,CAAT;AACD,KALH,EAMGC,KANH,CAMSV,OANT;AAOD,GATD;;AAWA,QAAMW,QAAQ,GAAIN,KAAD,IAAW;AAC1BF,IAAAA,QAAQ,CAACE,KAAK,CAACO,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAGAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,QAAIC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;AACvBC,MAAAA,IAAI,EAAE,eADiB;AAEvBC,MAAAA,QAAQ,EAAE,KAFa;AAGvBC,MAAAA,IAAI,EAAE;AAHiB,KAAf,CAAV;AAMA,QAAIC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAEX,SAFU;AAGnBY,MAAAA,IAAI,EAAET,GAHa;AAInBU,MAAAA,QAAQ,EAAE;AAJS,KAArB;AAOAC,IAAAA,KAAK,CAAC,8BAAD,EAAiCL,cAAjC,CAAL,CACGf,IADH,CACSqB,QAAD,IAAcA,QAAQ,CAACT,IAAT,EADtB,EAEGZ,IAFH,CAESsB,MAAD,IAAYC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAFpB,EAGGpB,KAHH,CAGUuB,KAAD,IAAWF,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB,CAHpB;AAID,GArBQ,CAAT;AAsBA,sBACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAE7B,QAAvC;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,KAAK,EAAEF,KAHT;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,SAAS,MALX;AAME,MAAA,QAAQ,EAAES,QANZ;AAOE,MAAA,SAAS,EAAC;AAPZ;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAvDD;;GAAMb,Y;;KAAAA,Y;AAyDN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst NewTweetForm = ({ tweetService, onError, onCreated }) => {\n  const [tweet, setTweet] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    tweetService\n      .postTweet(tweet)\n      .then((created) => {\n        setTweet(\"\");\n        onCreated(created);\n      })\n      .catch(onError);\n  };\n\n  const onChange = (event) => {\n    setTweet(event.target.value);\n  };\n  useEffect(() => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var raw = JSON.stringify({\n      text: \"New Message:)\",\n      username: \"bob\",\n      name: \"bob\",\n    });\n\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\",\n    };\n\n    fetch(\"http://localhost:8080/tweets\", requestOptions)\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n  });\n  return (\n    <form className=\"tweet-form\" onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Edit your tweet\"\n        value={tweet}\n        required\n        autoFocus\n        onChange={onChange}\n        className=\"form-input tweet-input\"\n      />\n      <button type=\"submit\" className=\"form-btn\">\n        Post\n      </button>\n    </form>\n  );\n};\n\nexport default NewTweetForm;\n"]},"metadata":{},"sourceType":"module"}